dist: xenial
language: python
env:
  - ONNX_ML=1

addons:
  apt:
    packages:
      - build-essential
      - curl
      - git

python:
    - "2.7"
    - "3.5"
    - "3.6"
    - "3.7"

install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      curl -L https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -o $HOME/miniconda.sh;
    else
      curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o $HOME/miniconda.sh;
    fi
  - export ONNX_VERSION="";
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.5" ]]; then
      export ONNX_VERSION="==1.1.2";
    fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]]; then
      export ONNX_VERSION="==1.2.3";
    fi
  - cd $HOME && bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - export LD_LIBRARY_PATH="$HOME/miniconda/lib:$LD_LIBRARY_PATH"
  - export LIBRARY_PATH="$HOME/miniconda/lib:$LIBRARY_PATH"
  - export CPATH="$HOME/miniconda/include:$CPATH"
  - conda config --set always_yes yes --set changeps1 no
  - conda install -c conda-forge protobuf
  - conda install -c conda-forge numpy
  - conda install -c conda-forge cmake
  - conda install -c conda-forge openmpi
  - conda install -c conda-forge tensorflow
  - cd $TRAVIS_BUILD_DIR && pip install -r requirements-dev.txt
  - cd $TRAVIS_BUILD_DIR && pip install cntk
  - cd $TRAVIS_BUILD_DIR && pip install -I "onnx$ONNX_VERSION"
  - cd $TRAVIS_BUILD_DIR && pip install -I keras==2.1.6
  - cd $TRAVIS_BUILD_DIR && export PYTHONPATH=pwd
  - if [[ "$TRAVIS_PYTHON_VERSION" != "2.7" ]]; then
      pip install onnxruntime;
    fi

script:
  - python -m pytest --cov=onnxmltools --cov-report=term --cov-report=html --cov-report=xml tests

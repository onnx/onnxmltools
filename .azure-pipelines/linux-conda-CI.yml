# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  timeoutInMinutes: 30
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python310-1130-RT1140-xgb173:
        python.version: '3.10'
        ONNX_PATH: 'onnx==1.13.0' #'-i https://test.pypi.org/simple/ onnx==1.12.0rc4'
        ONNXRT_PATH: onnxruntime==1.14.0 #'-i https://test.pypi.org/simple/ ort-nightly==1.11.0.dev20220311003'
        COREML_PATH: NONE
        xgboost.version: '>=1.7.3'
        numpy.version: ''
      Python310-1130-RT1131-xgb173:
        python.version: '3.10'
        ONNX_PATH: 'onnx==1.13.0' #'-i https://test.pypi.org/simple/ onnx==1.12.0rc4'
        ONNXRT_PATH: onnxruntime==1.13.1 #'-i https://test.pypi.org/simple/ ort-nightly==1.11.0.dev20220311003'
        COREML_PATH: NONE
        xgboost.version: '>=1.7.3'
        numpy.version: ''
      Python310-1120-RT1121-xgb161:
        python.version: '3.10'
        ONNX_PATH: 'onnx==1.12.0' #'-i https://test.pypi.org/simple/ onnx==1.12.0rc4'
        ONNXRT_PATH: onnxruntime==1.12.1 #'-i https://test.pypi.org/simple/ ort-nightly==1.11.0.dev20220311003'
        COREML_PATH: NONE
        xgboost.version: '==1.6.1'
        numpy.version: ''
      Python39-1120-RT1110-xgb161:
        python.version: '3.9'
        ONNX_PATH: 'onnx==1.12.0' #'-i https://test.pypi.org/simple/ onnx==1.12.0rc4'
        ONNXRT_PATH: onnxruntime==1.11.0 #'-i https://test.pypi.org/simple/ ort-nightly==1.11.0.dev20220311003'
        COREML_PATH: git+https://github.com/apple/coremltools@3.1
        xgboost.version: '>=1.6.1'
        numpy.version: ''
      Python39-1120-RT1110-xgb142:
        python.version: '3.9'
        ONNX_PATH: 'onnx==1.12.0' #'-i https://test.pypi.org/simple/ onnx==1.12.0rc4'
        ONNXRT_PATH: onnxruntime==1.11.0 #'-i https://test.pypi.org/simple/ ort-nightly==1.11.0.dev20220311003'
        COREML_PATH: git+https://github.com/apple/coremltools@3.1
        xgboost.version: '==1.4.2'
        numpy.version: ''
      Python39-1110-RT1110:
        python.version: '3.9'
        ONNX_PATH: onnx==1.11.0  # '-i https://test.pypi.org/simple/ onnx==1.9.101'
        ONNXRT_PATH: onnxruntime==1.11.0 #'-i https://test.pypi.org/simple/ ort-nightly==1.11.0.dev20220311003'
        COREML_PATH: git+https://github.com/apple/coremltools@3.1
        numpy.version: ''
      Python39-1110-RT1100:
        python.version: '3.9'
        ONNX_PATH: onnx==1.11.0  # '-i https://test.pypi.org/simple/ onnx==1.9.101'
        ONNXRT_PATH: onnxruntime==1.10.0
        COREML_PATH: git+https://github.com/apple/coremltools@3.1
        xgboost.version: '>=1.2'
        numpy.version: ''
      Python39-1101-RT190:
        python.version: '3.9'
        ONNX_PATH: onnx==1.10.1
        ONNXRT_PATH: onnxruntime==1.9.0
        COREML_PATH: git+https://github.com/apple/coremltools@3.1
        xgboost.version: '>=1.2'
        numpy.version: '<=1.23.5'
      Python39-190-RT180-xgb11:
        python.version: '3.9'
        ONNX_PATH: onnx==1.9.0
        ONNXRT_PATH: onnxruntime==1.8.0
        COREML_PATH: git+https://github.com/apple/coremltools@3.1
        xgboost.version: '>=1.2'
        numpy.version: '<=1.23.5'
      Python38-181-RT170-xgb11:
        python.version: '3.8'
        ONNX_PATH: onnx==1.8.1
        ONNXRT_PATH: onnxruntime==1.7.0
        COREML_PATH: git+https://github.com/apple/coremltools@3.1
        xgboost.version: '>=1.2'
        numpy.version: '<=1.23.5'

    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install $(ONNX_PATH) $(ONNXRT_PATH) cython
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      pip install -r requirements-dev.txt
    displayName: 'Install dependencies-dev'

  - script: |
      python -m pip install --upgrade pip
      pip install xgboost$(xgboost.version)
      pip install $(ONNX_PATH)
      pip install $(ONNXRT_PATH)
      pip install "numpy$(numpy.version)"
    displayName: 'Install xgboost, onnxruntime'

  - script: |
      pip install flake8
      python -m flake8 ./onnxmltools
    displayName: 'run flake8 check'

  - script: |
      pip install -e .
    displayName: 'local installation'

  - script: |
      export PYTHONPATH=.
      python -c "import onnxruntime;print('onnx:',onnx.__version__)"
      python -c "import onnxconverter_common;print('cc:',onnxconverter_common.__version__)"
      python -c "import onnx;print('onnx:',onnx.__version__)"
      python -c "import onnxruntime;print('ort:',onnxruntime.__version__)"
      python -c "import xgboost;print('xgboost:',xgboost.__version__)"
      python -c "import lightgbm;print('lightgbm:',lightgbm.__version__)"
    displayName: 'version'

  - script: |
      export PYTHONPATH=.
      pytest tests/baseline --durations=0
    displayName: 'pytest - baseline'

  - script: |
      export PYTHONPATH=.
      pytest tests/catboost --durations=0
    displayName: 'pytest - catboost'

  - script: |
      export PYTHONPATH=.
      pytest tests/lightgbm --durations=0
    displayName: 'pytest - lightgbm'

  - script: |
      export PYTHONPATH=.
      pytest tests/sparkml --durations=0
    displayName: 'pytest - sparkml'

  - script: |
      export PYTHONPATH=.
      pytest tests/svmlib --durations=0
    displayName: 'pytest - svmlib'

  - script: |
      export PYTHONPATH=.
      pytest tests/utils --durations=0
    displayName: 'pytest - utils'

  - script: |
      export PYTHONPATH=.
      pytest tests/xgboost --durations=0
    displayName: 'pytest - xgboost'

  - script: |
      export PYTHONPATH=.
      pip install h2o
      pytest tests/h2o --durations=0
    displayName: 'pytest - h2o'

  - script: |
      pip install torch --extra-index-url https://download.pytorch.org/whl/cpu
      pip install hummingbird-ml --no-deps
    displayName: 'Install hummingbird-ml'

  - script: |
      export PYTHONPATH=.
      pytest tests/hummingbirdml --durations=0
    displayName: 'pytest - hummingbirdml'

  - script: |
      if [ '$(COREML_PATH)' == 'NONE' ]
      then
        echo "required version of coremltools does not work on python 3.10"
      else
        export PYTHONPATH=.
        pip install $(COREML_PATH)
        pytest tests/coreml --durations=0
      fi
    displayName: 'pytest - coreml [$(COREML_PATH)]'
    # condition: ne('$(COREML_PATH)', 'NONE')

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()

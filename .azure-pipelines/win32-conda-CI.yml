# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      # No python 2.x since no available ONNX package for Windows
      # Python27:
      #   python.version: '2.7'
      Python35:
        python.version: '3.5'
        ONNX_PATH: onnx==1.2.3
        COREML_PATH: https://github.com/apple/coremltools/archive/v2.0.zip

      Python36:
        python.version: '3.6'
        ONNX_PATH: onnx==1.3.0
        COREML_PATH: git+https://github.com/apple/coremltools

    maxParallel: 3

  steps:
  - task: CondaEnvironment@1
    inputs:
      createCustomEnvironment: true
      environmentName: 'py$(python.version)'
      packageSpecs: 'python=$(python.version)'

  - script: |
      conda install -y -c conda-forge protobuf numpy
      python -m pip install --upgrade pip
      pip install %COREML_PATH% %ONNX_PATH% cntk==2.5.1
      pip install -r requirements-dev.txt
      # install libsvm from github
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
      git clone --recursive https://github.com/cjlin1/libsvm libsvm
      cd libsvm
      nmake -f Makefile.win lib
      copy windows\*.dll python
      cd ..
      set PYTHONPATH=libsvm\python;%PYTHONPATH%
      dir libsvm\python
      python -c "import svmutil"
    displayName: 'Install dependencies'

  - script: |
      pip install -q scipy==1.2.0 --no-deps
      pip show scipy
      python -c "import numpy;print('numpy:',numpy.__version__)"
      python -c "import numpy;from sklearn.feature_extraction import DictVectorizer;print('DictVectorizer:',DictVectorizer.__class__)"
      
    displayName: 'Install scipy with pip (DLL not found with conda version)'

  - script: |
      set PYTHONPATH=libsvm\python;%PYTHONPATH%
      pip install -e .
      pytest tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
